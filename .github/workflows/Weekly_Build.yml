name: Weekly Build

# 触发器
on:
  schedule:
    - cron: '0 15 * * 0' #每周天在国际标准时间15点(北京时间+8，即 23:00)
  workflow_dispatch:
    inputs:
      root_sol:
        description: "Weekly Build Title"
        required: true
        default: "SmsForwarder"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - uses: actions/checkout@v2
      # 删除旧的工作流
      - name: Delete Weekly Build
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0 # 全部删除只留正在跑的一条
          keep_minimum_runs: 0 # 全部删除只留正在跑的一条
          delete_workflow_pattern: 'Weekly Build'
      # 设置jdk环境为11
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      # 获取打包秘钥
      - name: Checkout Android Keystore
        uses: actions/checkout@v2
        with:
          repository: pppscn/keystore
          token: ${{ secrets.TOKEN }} # 连接仓库的token,需要单独配置
          path: keystore # 仓库的根目录名
      # 打包release
      - name: Build with Gradle
        run: bash ./gradlew assembleRelease
      # 生成文件列表并保存每个文件名到单独的文件中
      - name: Generate Artifact Paths
        run: |
          # 使用 find 命令生成文件列表
          artifact_files=$(find build/app/outputs/apk/release -name "*.apk")
          
          # 输出找到的文件列表
          echo "Found APK files: $artifact_files"
          
          # 逐个保存每个文件名到单独的文件中
          for file in $artifact_files; do
            file_name=$(basename "$file")
            echo "$file_name" > "${file_name}.txt"
          done
          
          # 将所有文件名存储到一个文件中，以便上传
          echo "$artifact_files" > artifact_paths.txt
        shell: bash
      # 上传 Artifacts，使用每个文件的真实文件名作为 Artifacts 名称
      - name: Upload Artifacts
        run: |
          # 读取文件列表，逐个上传文件
          while IFS= read -r file; do
            echo "Uploading $file to Artifacts with name $file"
            echo "::set-output name=artifact::$file"  # 设置输出以便后续步骤使用
          done < artifact_paths.txt
        shell: bash
